# Создание директории /backups, включая родительские директории, если они отсутствуют
sudo mkdir -p /backups

# Установка прав доступа: только владелец (обычно root) имеет полный доступ
sudo chmod 700 /backups

# Загрузка скрипта backup.sh из указанного URL
wget https://raw.githubusercontent.com/kir450/all/main/backup.sh

# Предоставление скрипту права на выполнение
sudo chmod +x backup.sh

# Открытие редактора crontab для текущего пользователя
crontab -e

# Выполнение скрипта backup.sh каждые 10 минут
*/10 * * * * /usr/backup.sh

# Ручной запуск скрипта с правами суперпользователя
sudo /usr/backup.sh

# Просмотр содержимого файла лога резервного копирования
cat /backups/backup.log

# Вывод списка текущих заданий cron для пользователя
crontab -l

# Синтаксис записи в crontab:
# * * * * * /path/to/command
# - - - - -
# | | | | |
# | | | | +---- День недели (0 - 7) (воскресенье = 0 или 7)
# | | | +------ Месяц (1 - 12)
# | | +-------- День месяца (1 - 31)
# | +---------- Час (0 - 23)
# +------------ Минута (0 - 59)

# Перезапуск службы cron для применения изменений
sudo systemctl restart cron

# Запуск команды обновления пакетов в 3:00 каждую неделю по понедельникам
0 3 * * 1 sudo apt update

# Удаление всех файлов в /tmp/ в 4:00 каждый день
0 4 * * * sudo rm -rf /tmp/*

# Поиск записей, связанных с cron, в системном логе
sudo grep CRON /var/log/syslog

# Просмотр обновлений системного лога в реальном времени с фильтрацией по CRON
sudo tail -f /var/log/syslog | grep CRON

# Запуск скрипта report.sh каждый понедельник в 8:00 утра
0 8 * * 1 /usr/report.sh

# Установка пакетов postfix и mailutils
sudo apt install -y postfix mailutils


